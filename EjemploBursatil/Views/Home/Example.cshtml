<div class="contenedor">

    <div class="alert alert-primary">
        <table border="1">

         
            @{
                List<EjemploBursatil.DAL.Recomendacion> lista= ViewBag.Message;
                
            var i = 0;
            foreach (EjemploBursatil.DAL.Recomendacion item in lista)
	            {
		            <tr><td> @item.Texto </td><td> <img src="~/Content/images/@(item.Icon).png" style="height:40px;width:40px;" /></td></tr>
	            }
            }

        </table>
    </div>
    <div class="contenedor">
        <div id="chartContainer" style="width: 100%"></div>
    </div>
    <div class="contenedor">
        <div id="chartStock" style="width: 100%"></div>
    </div>
    <div class="contenedor">
        <div id="chartRSI" style="width: 100%"></div>
    </div>



    <script type="text/javascript">
        window.onload = function () {

            function toggleDataSeries(e) {
                if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                    e.dataSeries.visible = false;
                } else {
                    e.dataSeries.visible = true;
                }
                e.chart.render();
            }


            //-----------------------------------------------------------------------
            
           

           
            var chart = new CanvasJS.Chart("chartContainer", {
                animationEnabled: true,
                exportEnabled: true,
                zoomEnabled: true,
                exportFileName: "Grafico de velas",
                title: {
                    text: "Cotizacion"
                },
                axisX: {
                    interval: 1,
                    intervalType: "month",
                    valueFormatString: "DD MMM YYYY",
                    crosshair: {
                        enabled: true,
                        snapToDataPoint: true
                    }
                },
                axisY: {
                    includeZero: false,
                    prefix: "$",
                    title: "Valor",
                    crosshair: {
                        enabled: true,
                        snapToDataPoint: true,
                        labelFormatter: function(e) {
                            return "$" + CanvasJS.formatNumber(e.value, "##0.00");
                        }
                    }
                },
                data: [{
                    type: "candlestick",
                    risingColor: "Green", 
                    fallingColor: "Red",
                    yValueFormatString: "$#,##0.00",
                    xValueType: "dateTime",
                    dataPoints: @Html.Raw(ViewBag.CandleStick)
                    },
                    {
                        type: "line",
                        name: "Tendencia",
                        xValueType: "dateTime",
                        yValueFormatString: "$#,##0.##",
                        dataPoints: @Html.Raw(ViewBag.Tendencia)
                        }
                ]
            });
            chart.render();
            
            //-----------------------------------------------------------------------

            var chart1 = new CanvasJS.Chart("chartStock", {
                animationEnabled: false,
                zoomEnabled: true, 
                title: {
                    text: "Oscilador Estocastico"
                },
                axisX: {
                    interval: 1,
                    intervalType: "month",
                    valueFormatString: "DD MMM YYYY"
                },
                axisY: {
                    title: "Stock",
                    includeZero: false,
                    suffix: " %",
                    stripLines: [{
                        value: 80,
                        thickness:5,
                        lineDashType: "dash"
                    },{
                        value: 20,
                        thickness:5,
                        lineDashType: "dash"
                    }
                    ]},
                legend: {
                    cursor: "pointer",
                    fontSize: 16,
                    itemclick: toggleDataSeries
                },
                toolTip: {
                    shared: true
                },
                data: [
                    {
                        name: "Stock",
                        type: "line",
                        yValueFormatString: "#0.## $",
                        showInLegend: true,
                        xValueType: "dateTime",
                        dataPoints: @Html.Raw(ViewBag.Stock)
                        }
                        ,
                    {
                        name: "Stock3",
                        type: "spline",
                        yValueFormatString: "#0.## $",
                        showInLegend: true,
                        xValueType: "dateTime",
                        dataPoints: @Html.Raw(ViewBag.Stock3)
                    }
                , {
                    name: "Stock6",
                    type: "spline",
                    yValueFormatString: "#0.## $",
                    xValueType: "dateTime",
                    showInLegend: true,
                    dataPoints: @Html.Raw(ViewBag.Stock6)
                    }]
            });



            chart1.render();

            //----------------------
            var chartRSI = new CanvasJS.Chart("chartRSI", {
                animationEnabled: true,
                theme: "light2",
                title:{
                    text: "RSI y Volumen"
                },
          
                axisX: {
                    interval: 1,
                    intervalType: "month",
                    valueFormatString: "DD MMM YYYY"
                },
                axisY:{
                    includeZero: false,
                    stripLines: [{
                        value: 0.7,
                        label: "Superior"
                    },{
                        value: 0.3,
                        label: "Inferior"
                    }
                    ]
                   
                },
                data: [{   
                    xValueType: "dateTime",
                    type: "line",       
                    dataPoints:  @Html.Raw(ViewBag.RSI)
                    },
                {
                    type: "column",
                    dataPoints: @Html.Raw(ViewBag.Volumen)
                    }]
            });
            chartRSI.render();




        }
    </script>



</div>
